// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PurchaseAssistantWebApp.Database;
using System.Diagnostics.CodeAnalysis;

namespace PurchaseAssistantWebApp.Migrations
{
    [ExcludeFromCodeCoverage]
    [DbContext(typeof(AppDbContext))]
    [Migration("20201024161351_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("PurchaseAssistantWebApp.Models.CallSetupRequest", b =>
                {
                    b.Property<string>("RequestId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CoustomerName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Organisation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .HasColumnType("TEXT");

                    b.Property<string>("SelectedModels")
                        .HasColumnType("TEXT");

                    b.HasKey("RequestId");

                    b.ToTable("CallSetupRequest");
                });

            modelBuilder.Entity("PurchaseAssistantWebApp.Models.ModelsSpecification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BatterySupport")
                        .HasColumnType("TEXT");

                    b.Property<string>("BpCheck")
                        .HasColumnType("TEXT");

                    b.Property<string>("CardiacOutputCheck")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("EcgCheck")
                        .HasColumnType("TEXT");

                    b.Property<string>("HeartRateCheck")
                        .HasColumnType("TEXT");

                    b.Property<string>("MonitorResolution")
                        .HasColumnType("TEXT");

                    b.Property<string>("MultiPatientSupport")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Portable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .HasColumnType("TEXT");

                    b.Property<double>("ScreenSize")
                        .HasColumnType("REAL");

                    b.Property<string>("SpO2Check")
                        .HasColumnType("TEXT");

                    b.Property<string>("TemperatureCheck")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TouchScreenSupport")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("PurchaseAssistantWebApp.Models.SalesRepresentative", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("DepartmentRegion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SalesRepresentatives");
                });

            modelBuilder.Entity("PurchaseAssistantWebApp.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Organisation")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("UserName");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
